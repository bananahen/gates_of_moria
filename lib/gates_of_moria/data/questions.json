{
  "questions": [
    {
      "help_texts": [ "Are you ready to begin your adventure? Answer in Ruby.",
                      "In Ruby, we say things are correct, or 'truthy', when they are true.",
                      "We often use true to say yes, as well",
                      "Try telling Ruby that it is 'true' that you want to begin your adventure.",
                      "Try reading http://www.ruby-lang.org/en/documentation/quickstart/ to get started!"
                    ],
      "expected_response": "result == true"
    },
    {
      "title": "\nPart 1: Strings\n===============\n",
      "help_texts": [ "Now give me the name Gandalf as a String.",
                      "Strings are typically wrapped in either single quotes or double quotes.",
                      "Try putting Gandalf's name in quotes."
                    ],
      "expected_response": "result == 'Gandalf'"
    },
    {
      "title": "\nPart 2: Variables\n=================\n",
      "help_texts": [ "Let me know your name by assigning it to a variable called @name",
                      "Variables hold information. We use the equal sign to assign an object to a variable.",
                      "Here's how I would tell Ruby my name:\n  @name = \"Matt\"",
                      "In this case, we want to assign the value of your name, as a String, to the variable @name.",
                      "I think you might like reading about variables:\n  http://mislav.uniqpath.com/poignant-guide/book/chapter-3.html#section2"
                    ],
      "expected_response": "@name.class == String && @name.length > 0"
    },
    {
      "title": "\nPart 3: Methods\n===============\n",
      "help_texts": [ "Now send the String 'sevraq' to the translate method.",
                      "We say that we are sending a message to an object when we invoke a method.",
                      "In this case, the object we are sending the translate message to is the global object. But don't worry too much about that yet!",
                      "You can send a message to Ruby like this:\n  method(parameters)",
                      "I think you would like this part of the book Programming Ruby:\n  http://www.ruby-doc.org/docs/ProgrammingRuby/html/tut_methods.html"
                    ],
      "expected_response": "result == 'friend'",
      "setup_code": "def translate(s); s.tr!('A-Za-z', 'N-ZA-Mn-za-m'); end",
      "_comments": [ "So now we know that the strange word 'sevraq' is really the word 'friend' when we run it through the translator!"]
    },
    {
      "title": "\nPart 4: Objects\n===============\n",
      "help_texts": [ "The great big door is before you.\n\nSend the message 'read' to the Door object to read what it says.",
                      "When we send a message to an object, we're invoking a method with that name on the object.",
                      "The Door class has a method called 'read'.",
                      "If I wanted to blow the Horn of Gondor, I might write in Ruby:\n  HornOfGondor.blow!",
                      "If you've got time, you might want to watch this video to get a deep dive into what these object things are:\n\nhttp://confreaks.com/videos/1133-scrc2012-thinking-in-objects\n\n(it is roughly 26 minutes long)"
      ],
      "expected_response": "result == 'fcrnx sevraq naq ragre'",
      "setup_code": "load 'lib/gates_of_moria/data/door.rb'"
    },
    {
      "title": "\nPart 5: Putting it all together\n===============================\n",
      "help_texts": [ "So now we've got this weird text from the Door, and it appears to be the same strange language that we translated before.\n\nLet's use our translate method again on the String returned by reading the Door.",
                      "Remember how we sent the String 'sevraq' as a parameter to translate() before?\n\nWe can do the same thing with Door.read, because Door.read will return the strange text as a String and send it as a parameter to translate().",
                      "If I wanted to translate some text from the first page of a book, I might do this:\n\n  translate(OldBook.first_page)"
                    ],
      "expected_response": "result = 'speak friend and enter'"
    },
    {
      "title": "\nPart 6: Solving the Riddle\n==========================\n",
      "help_texts": [ "Huh, the secret message on the door is the text 'speak friend and enter'\n\nNow that we know that the text on the door is a riddle, and we know how to speak in it's secret language, try sending the Door the message 'tell' with the parameter of the answer to the riddle.",
                      "Remember that we need to speak in the Door's language.\n\n  You can use the translate() method to turn the word 'friend' back into its strange language.",
                      "The tell() method on the Door class tries to answer the riddle. Give it another try!",
                      "The Door expects the tell method to receive the string 'sevraq', which is its secret word for 'friend'!"
      ],
      "expected_response": "result == 'The door opens!'",
      "setup_code": ""
    }
  ],

  "question_template":
    {
      "title": "\nPart N: Foo\n===============\n",
      "help_texts": [ ""
      ],
      "expected_response": "",
      "setup_code": ""
  }
}
